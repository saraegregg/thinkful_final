{"ast":null,"code":"var _jsxFileName = \"/Users/Z00C53N/thinkful/react-projects/Module-13/src/components/decks/ViewDeck.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { readDeck } from '../../utils/api';\n// import CardList from '../cards/CardList';\nimport CreateButton from '../buttons/CreateButton';\nimport Deck from './Deck';\nimport BreadcrumbNav from '../BreadcrumbNav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ViewDeck() {\n  _s();\n  const initialDeckState = {\n    id: 0,\n    name: \"\",\n    description: \"\",\n    cards: []\n  };\n  const {\n    deckId\n  } = useParams();\n  const [currentDeck, setCurrentDeck] = useState({\n    ...initialDeckState\n  });\n  useEffect(() => {\n    async function loadCurrentDeckFromApi() {\n      try {\n        const response = await readDeck(deckId);\n        setCurrentDeck(response);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    ;\n    loadCurrentDeckFromApi();\n  }, [deckId]);\n  const breadcrumbItems = [{\n    label: 'Home',\n    to: '/'\n  }, {\n    label: 'View Deck',\n    to: '/decks'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BreadcrumbNav, {\n      items: breadcrumbItems,\n      currentState: currentDeck.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"View Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Deck, {\n      deck: currentDeck,\n      currentPage: \"ViewDeck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Cards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ViewDeck, \"v0vAmdnXBFAHo36giGr5CwLw6/w=\", false, function () {\n  return [useParams];\n});\n_c = ViewDeck;\n;\nvar _c;\n$RefreshReg$(_c, \"ViewDeck\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","readDeck","CreateButton","Deck","BreadcrumbNav","jsxDEV","_jsxDEV","Fragment","_Fragment","ViewDeck","_s","initialDeckState","id","name","description","cards","deckId","currentDeck","setCurrentDeck","loadCurrentDeckFromApi","response","error","console","breadcrumbItems","label","to","children","items","currentState","fileName","_jsxFileName","lineNumber","columnNumber","deck","currentPage","_c","$RefreshReg$"],"sources":["/Users/Z00C53N/thinkful/react-projects/Module-13/src/components/decks/ViewDeck.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { readDeck } from '../../utils/api';\n// import CardList from '../cards/CardList';\nimport CreateButton from '../buttons/CreateButton';\nimport Deck from './Deck';\nimport BreadcrumbNav from '../BreadcrumbNav';\n\nexport default function ViewDeck() {\n    const initialDeckState = {\n        id: 0,\n        name: \"\",\n        description: \"\",\n        cards: [],\n    };\n\n    const { deckId } = useParams();\n    \n    const [ currentDeck, setCurrentDeck ] = useState({...initialDeckState});\n\n    useEffect(() => {\n        async function loadCurrentDeckFromApi() {\n            try {\n                const response = await readDeck(deckId);\n                setCurrentDeck(response);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        loadCurrentDeckFromApi();\n    }, [deckId]);\n\n    const breadcrumbItems = [\n        { label: 'Home', to: '/' },\n        { label: 'View Deck', to: '/decks' },\n    ]\n\n    return (\n        <>\n            <BreadcrumbNav items={breadcrumbItems} currentState={currentDeck.name} />\n            <h2 >View Deck</h2>\n            <Deck deck={currentDeck} currentPage={\"ViewDeck\"} />\n            {/* <div >\n                <CreateButton routePath={`/decks/${deckId}/cards/new`} buttonFunction={\"Card\"} />\n            </div> */}\n            <h3 >Cards</h3>\n            {/* <CardList deck={currentDeck} cards={currentDeck.cards} /> */}\n        </>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,SAASC,QAAQ,QAAQ,iBAAiB;AAC1C;AACA,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,aAAa,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAC/B,MAAMC,gBAAgB,GAAG;IACrBC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE;EACX,CAAC;EAED,MAAM;IAAEC;EAAO,CAAC,GAAGhB,SAAS,CAAC,CAAC;EAE9B,MAAM,CAAEiB,WAAW,EAAEC,cAAc,CAAE,GAAGpB,QAAQ,CAAC;IAAC,GAAGa;EAAgB,CAAC,CAAC;EAEvEd,SAAS,CAAC,MAAM;IACZ,eAAesB,sBAAsBA,CAAA,EAAG;MACpC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMnB,QAAQ,CAACe,MAAM,CAAC;QACvCE,cAAc,CAACE,QAAQ,CAAC;MAC5B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACxB;IACJ;IAAC;IACDF,sBAAsB,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACH,MAAM,CAAC,CAAC;EAEZ,MAAMO,eAAe,GAAG,CACpB;IAAEC,KAAK,EAAE,MAAM;IAAEC,EAAE,EAAE;EAAI,CAAC,EAC1B;IAAED,KAAK,EAAE,WAAW;IAAEC,EAAE,EAAE;EAAS,CAAC,CACvC;EAED,oBACInB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACIpB,OAAA,CAACF,aAAa;MAACuB,KAAK,EAAEJ,eAAgB;MAACK,YAAY,EAAEX,WAAW,CAACJ;IAAK;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzE1B,OAAA;MAAAoB,QAAA,EAAK;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB1B,OAAA,CAACH,IAAI;MAAC8B,IAAI,EAAEhB,WAAY;MAACiB,WAAW,EAAE;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAIpD1B,OAAA;MAAAoB,QAAA,EAAK;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAEjB,CAAC;AAEX;AAACtB,EAAA,CAzCuBD,QAAQ;EAAA,QAQTT,SAAS;AAAA;AAAAmC,EAAA,GARR1B,QAAQ;AAyC/B;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}