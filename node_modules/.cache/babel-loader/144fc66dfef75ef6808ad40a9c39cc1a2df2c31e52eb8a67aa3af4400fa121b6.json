{"ast":null,"code":"var _jsxFileName = \"/Users/Z00C53N/thinkful/react-projects/Module-13/src/components/decks/DeckList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { listDecks } from '../../utils/api';\nimport CreateButton from '../buttons/CreateButton';\nimport Deck from './Deck';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DeckList() {\n  _s();\n  const [decks, setDecks] = useState([]);\n\n  //useEffect to update the decks list here\n\n  deckList = decks.map(deck => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(Deck, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 54\n    }, this)\n  }, deck.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 36\n  }, this));\n  if (decks) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CreateButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Decks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: deckList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"There are no decks yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Let's create one and get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CreateButton, {\n      routePath: \"/decks/new\",\n      buttonFunction: \"Deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(DeckList, \"5UZi2f9bXkYfhLtlChKy/B9n4tk=\");\n_c = DeckList;\n;\nexport default DeckList;\nvar _c;\n$RefreshReg$(_c, \"DeckList\");","map":{"version":3,"names":["React","useEffect","useState","listDecks","CreateButton","Deck","jsxDEV","_jsxDEV","Fragment","_Fragment","DeckList","_s","decks","setDecks","deckList","map","deck","children","fileName","_jsxFileName","lineNumber","columnNumber","id","routePath","buttonFunction","_c","$RefreshReg$"],"sources":["/Users/Z00C53N/thinkful/react-projects/Module-13/src/components/decks/DeckList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { listDecks } from '../../utils/api';\nimport CreateButton from '../buttons/CreateButton';\nimport Deck from './Deck';\n\nfunction DeckList() {\n    const [ decks, setDecks ] = useState ([]);\n\n    //useEffect to update the decks list here\n\n    deckList = decks.map((deck) => <li key={deck.id}><Deck /></li>)\n\n    if (decks) {\n        return (\n            <>\n                <CreateButton />\n                <h2>Available Decks</h2>\n                <ul>{deckList}</ul>\n            </>\n        )\n    }\n    return (\n        <>\n            <h2>There are no decks yet.</h2>\n            <p>Let's create one and get started!</p>\n            <CreateButton \n            routePath={\"/decks/new\"}\n            buttonFunction={\"Deck\"}\n            />\n        </>\n    )\n};\n\nexport default DeckList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAAEC,KAAK,EAAEC,QAAQ,CAAE,GAAGX,QAAQ,CAAE,EAAE,CAAC;;EAEzC;;EAEAY,QAAQ,GAAGF,KAAK,CAACG,GAAG,CAAEC,IAAI,iBAAKT,OAAA;IAAAU,QAAA,eAAkBV,OAAA,CAACF,IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,GAAjBL,IAAI,CAACM,EAAE;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAc,CAAC,CAAC;EAE/D,IAAIT,KAAK,EAAE;IACP,oBACIL,OAAA,CAAAE,SAAA;MAAAQ,QAAA,gBACIV,OAAA,CAACH,YAAY;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChBd,OAAA;QAAAU,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBd,OAAA;QAAAU,QAAA,EAAKH;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA,eACrB,CAAC;EAEX;EACA,oBACId,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCd,OAAA;MAAAU,QAAA,EAAG;IAAiC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACxCd,OAAA,CAACH,YAAY;MACbmB,SAAS,EAAE,YAAa;MACxBC,cAAc,EAAE;IAAO;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA,eACJ,CAAC;AAEX;AAACV,EAAA,CA1BQD,QAAQ;AAAAe,EAAA,GAARf,QAAQ;AA0BhB;AAED,eAAeA,QAAQ;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}