{"ast":null,"code":"var _jsxFileName = \"/Users/Z00C53N/thinkful/react-projects/Module-13/src/components/cards/CreateCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { createCard, readDeck } from '../../utils/api';\nimport BreadcrumbNav from '../BreadcrumbNav';\nimport SubmitButton from '../buttons/SubmitButton';\nimport CancelButton from '../buttons/CancelButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateCard() {\n  _s();\n  const initialCardState = {\n    front: \"\",\n    back: \"\",\n    deckId: 0\n  };\n  const initialDeckState = {\n    id: 0,\n    name: \"\",\n    description: \"\",\n    cards: []\n  };\n  const {\n    deckId\n  } = useParams();\n  const history = useHistory();\n  const [currentCard, setCurrentCard] = useState({\n    ...initialCardState\n  });\n  const [currentDeck, setCurrentDeck] = useState({\n    ...initialDeckState\n  });\n  useEffect(() => {\n    async function loadCurrentDeckFromAPI() {\n      try {\n        const response = await readDeck(deckId);\n        setCurrentDeck(response);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    ;\n    loadCurrentDeckFromAPI();\n  }, [deckId]);\n  const createCardChangeHandler = ({\n    target\n  }) => {\n    setCurrentCard({\n      ...currentCard,\n      [target.name]: target.value\n    });\n  };\n  const createCardCancelHandler = event => {\n    event.preventDefault();\n    history.push(`/decks/${deckId}`);\n  };\n  const createCardSubmitHandler = event => {\n    event.preventDefault();\n    createCard(deckId, currentCard).then(() => {\n      setCurrentCard({\n        ...initialCardState\n      });\n      history.push(`/decks/${deckId}`);\n    });\n  };\n  const breadcrumbItems = [{\n    label: 'Home',\n    to: '/'\n  }, {\n    label: currentDeck.name,\n    to: `/decks/${currentDeck.id}`,\n    isActive: false\n  }, {\n    label: 'Create a New Card',\n    isActive: true\n  }];\n  function Form(props) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.formTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: props.submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: props.htmlForOne,\n              children: props.formLabelOne\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              required: true,\n              rows: \"4\",\n              cols: \"30\",\n              placeholder: props.formPlaceholderOne,\n              name: props.formNameOne,\n              type: \"text\",\n              onChange: props.changeHandler,\n              defaultValue: props.formValueOne ? props.formValueOne : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: props.htmlForTwo,\n              children: props.formLabelTwo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              required: true,\n              rows: \"4\",\n              cols: \"30\",\n              placeholder: props.formPlaceholderTwo,\n              name: props.formNameTwo,\n              type: \"text\",\n              onChange: props.changeHandler,\n              defaultValue: props.formValueTwo ? props.formValueTwo : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(CancelButton, {\n            cancelHandler: props.cancelHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n  ;\n  if (currentDeck) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(BreadcrumbNav, {\n        items: breadcrumbItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        formTitle: `${currentDeck.name} Create A New Card`,\n        changeHandler: createCardChangeHandler,\n        cancelHandler: createCardCancelHandler,\n        submitHandler: createCardSubmitHandler,\n        htmlForOne: `createCardFront`,\n        formLabelOne: `Front`,\n        formPlaceholderOne: `Front side of card`,\n        formNameOne: `front`,\n        htmlForTwo: `createCardBack`,\n        formLabelTwo: `Back`,\n        formPlaceholderTwo: `Back side of card`,\n        formNameTwo: `back`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 12\n  }, this);\n}\n_s(CreateCard, \"dGigDNqjl8lLWvVnAyV4shXUAYk=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = CreateCard;\n;\nexport default CreateCard;\nvar _c;\n$RefreshReg$(_c, \"CreateCard\");","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","createCard","readDeck","BreadcrumbNav","SubmitButton","CancelButton","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateCard","_s","initialCardState","front","back","deckId","initialDeckState","id","name","description","cards","history","currentCard","setCurrentCard","currentDeck","setCurrentDeck","loadCurrentDeckFromAPI","response","error","console","createCardChangeHandler","target","value","createCardCancelHandler","event","preventDefault","push","createCardSubmitHandler","then","breadcrumbItems","label","to","isActive","Form","props","children","formTitle","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","submitHandler","className","htmlFor","htmlForOne","formLabelOne","required","rows","cols","placeholder","formPlaceholderOne","formNameOne","type","onChange","changeHandler","defaultValue","formValueOne","htmlForTwo","formLabelTwo","formPlaceholderTwo","formNameTwo","formValueTwo","cancelHandler","items","_c","$RefreshReg$"],"sources":["/Users/Z00C53N/thinkful/react-projects/Module-13/src/components/cards/CreateCard.js"],"sourcesContent":["import React, {useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { createCard, readDeck } from '../../utils/api';\nimport BreadcrumbNav from '../BreadcrumbNav';\nimport SubmitButton from '../buttons/SubmitButton';\nimport CancelButton from '../buttons/CancelButton';\n\nfunction CreateCard(){\n    const initialCardState = {\n        front: \"\",\n        back: \"\",\n        deckId: 0,\n    };\n\n    const initialDeckState = {\n        id: 0,\n        name: \"\",\n        description: \"\",\n        cards: [],\n    };\n\n    const { deckId } = useParams();\n    const history = useHistory();\n\n    const [ currentCard, setCurrentCard ] = useState({...initialCardState});\n    const [currentDeck, setCurrentDeck] = useState({...initialDeckState});\n    \n    useEffect(() => {\n        async function loadCurrentDeckFromAPI() {\n            try {\n                const response = await readDeck(deckId);\n                setCurrentDeck(response);\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        loadCurrentDeckFromAPI();\n    }, [deckId]);\n\n    const createCardChangeHandler = ({ target }) => {\n        setCurrentCard({\n            ...currentCard,\n            [target.name]: target.value,\n        });\n    };\n\n    const createCardCancelHandler = (event) => {\n        event.preventDefault();\n        history.push(`/decks/${deckId}`)\n    };\n\n    const createCardSubmitHandler = (event) => {\n        event.preventDefault();\n        createCard(deckId, currentCard)\n        .then(() => {\n            setCurrentCard({...initialCardState});\n            history.push(`/decks/${deckId}`);\n        });\n    };\n\n    const breadcrumbItems = [\n        {label: 'Home', to: '/'},\n        {label: currentDeck.name, to:`/decks/${currentDeck.id}`, isActive: false},\n        {label: 'Create a New Card', isActive: true}\n    ]\n\n    function Form(props) {\n        return (\n            <>\n                <h2 >{props.formTitle}</h2>\n                <form onSubmit={props.submitHandler}>\n                    <div className=\"row\">\n                        <div className=\"col\">\n                        <label htmlFor={props.htmlForOne}>{props.formLabelOne}</label>\n                        <textarea\n                            required\n                            rows=\"4\" cols=\"30\"\n                            placeholder={props.formPlaceholderOne}\n                            name={props.formNameOne}\n                            type=\"text\"\n                            onChange={props.changeHandler}\n                            defaultValue={props.formValueOne ? props.formValueOne : \"\"}\n                        />\n                        </div>\n                        <div className=\"col\">\n                        <label htmlFor={props.htmlForTwo}>{props.formLabelTwo}</label>\n                        <textarea\n                            required\n                            rows=\"4\" cols=\"30\"\n                            placeholder={props.formPlaceholderTwo}\n                            name={props.formNameTwo}\n                            type=\"text\"\n                            onChange={props.changeHandler}\n                            defaultValue={props.formValueTwo ? props.formValueTwo : \"\"}\n                        />\n                        </div>\n                        </div>\n                        <br />\n                            <div className=\"row\">\n                        <CancelButton cancelHandler={props.cancelHandler} />\n                        <SubmitButton />\n                    </div>\n                </form>\n            </>\n        );\n    };\n\n\n\n\n    if (currentDeck) {\n        return (\n            <>\n                <BreadcrumbNav items={breadcrumbItems} />\n                <Form\n                    formTitle={`${currentDeck.name} Create A New Card`}\n                    changeHandler={createCardChangeHandler}\n                    cancelHandler={createCardCancelHandler}\n                    submitHandler={createCardSubmitHandler}\n                    htmlForOne={`createCardFront`}\n                    formLabelOne={`Front`}\n                    formPlaceholderOne={`Front side of card`}\n                    formNameOne={`front`}\n                    htmlForTwo={`createCardBack`}\n                    formLabelTwo={`Back`}\n                    formPlaceholderTwo={`Back side of card`}\n                    formNameTwo={`back`}\n                />\n\n                \n            </>\n        );\n    };\n    return <p>Loading...</p>\n};\n\nexport default CreateCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}