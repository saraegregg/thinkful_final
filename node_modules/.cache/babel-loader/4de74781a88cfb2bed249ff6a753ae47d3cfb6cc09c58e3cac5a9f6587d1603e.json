{"ast":null,"code":"import _defineProperty from\"/Users/Z00C53N/thinkful/react-projects/Module-13/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _regeneratorRuntime from\"/Users/Z00C53N/thinkful/react-projects/Module-13/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/Z00C53N/thinkful/react-projects/Module-13/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/Users/Z00C53N/thinkful/react-projects/Module-13/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/Z00C53N/thinkful/react-projects/Module-13/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import Form from'../../utils/Form';import{useHistory,useParams}from'react-router-dom';import BreadcrumbNav from'../BreadcrumbNav';import{updateCard,readDeck}from'../../utils/api';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function EditCard(){var initialCardState={front:\"\",back:\"\",deckId:0};var initialDeckState={id:0,name:\"\",description:\"\",cards:[]};var _useParams=useParams(),cardId=_useParams.cardId,deckId=_useParams.deckId;var history=useHistory();var _useState=useState(_objectSpread({},initialCardState)),_useState2=_slicedToArray(_useState,2),currentCard=_useState2[0],setCurrentCard=_useState2[1];var _useState3=useState(_objectSpread({},initialDeckState)),_useState4=_slicedToArray(_useState3,2),currentDeck=_useState4[0],setCurrentDeck=_useState4[1];useEffect(function(){function loadCurrentDeckFromAPI(){return _loadCurrentDeckFromAPI.apply(this,arguments);}function _loadCurrentDeckFromAPI(){_loadCurrentDeckFromAPI=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return readDeck(deckId);case 3:response=_context.sent;setCurrentDeck(response);setCurrentCard(response.cards.find(function(card){return card.id.toString()===cardId;}));_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](0);console.error(_context.t0);case 11:case\"end\":return _context.stop();}},_callee,null,[[0,8]]);}));return _loadCurrentDeckFromAPI.apply(this,arguments);};loadCurrentDeckFromAPI();},[cardId,deckId]);var updateCardChangeHandler=function updateCardChangeHandler(_ref){var target=_ref.target;setCurrentCard(_objectSpread(_objectSpread({},currentCard),{},_defineProperty({},target.name,target.value)));};var updateCardCancelHandler=function updateCardCancelHandler(event){event.preventDefault();history.push(\"/decks/\".concat(deckId));};var updateCardSubmitHandler=function updateCardSubmitHandler(event){event.preventDefault();updateCard(currentCard).then(function(){setCurrentCard(_objectSpread({},initialCardState));history.push(\"/decks/\".concat(deckId));});};var breadcrumbItems=[{label:'Home',to:'/'},{label:currentDeck.name,to:\"/decks/\".concat(deckId),isActive:false},{label:\"Edit Card \".concat(currentCard.id),isActive:true}];if(currentDeck&&currentCard){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(BreadcrumbNav,{items:breadcrumbItems}),/*#__PURE__*/_jsx(Form,{formTitle:\"\".concat(currentDeck.name,\": Edit Card \").concat(currentCard.id),changeHandler:updateCardChangeHandler,cancelHandler:updateCardCancelHandler,submitHandler:updateCardSubmitHandler,htmlForOne:\"createCardFront\",formLabelOne:\"Front\",formPlaceholderOne:currentCard.front,formNameOne:\"front\",formValueOne:currentCard.front,htmlForTwo:\"createCardBack\",formLabelTwo:\"Back\",formPlaceholderTwo:currentCard.back,formNameTwo:\"back\",formValueTwo:currentCard.back})]});};return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});};export default EditCard;","map":{"version":3,"names":["React","useEffect","useState","Form","useHistory","useParams","BreadcrumbNav","updateCard","readDeck","jsx","_jsx","jsxs","_jsxs","EditCard","initialCardState","front","back","deckId","initialDeckState","id","name","description","cards","_useParams","cardId","history","_useState","_objectSpread","_useState2","_slicedToArray","currentCard","setCurrentCard","_useState3","_useState4","currentDeck","setCurrentDeck","loadCurrentDeckFromAPI","_loadCurrentDeckFromAPI","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","sent","find","card","toString","t0","console","error","stop","updateCardChangeHandler","_ref","target","_defineProperty","value","updateCardCancelHandler","event","preventDefault","push","concat","updateCardSubmitHandler","then","breadcrumbItems","label","to","isActive","children","items","formTitle","changeHandler","cancelHandler","submitHandler","htmlForOne","formLabelOne","formPlaceholderOne","formNameOne","formValueOne","htmlForTwo","formLabelTwo","formPlaceholderTwo","formNameTwo","formValueTwo"],"sources":["/Users/Z00C53N/thinkful/react-projects/Module-13/src/components/cards/EditCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Form from '../../utils/Form';\nimport { useHistory, useParams } from 'react-router-dom';\nimport BreadcrumbNav from '../BreadcrumbNav';\nimport { updateCard, readDeck } from '../../utils/api';\n\n\nfunction EditCard() {\n    const initialCardState = {\n        front: \"\",\n        back: \"\",\n        deckId: 0,\n    };\n\n    const initialDeckState = {\n        id: 0,\n        name: \"\",\n        description: \"\",\n        cards: [],\n    };\n\n    const { cardId, deckId } = useParams();\n    const history = useHistory();\n\n    const [ currentCard, setCurrentCard ] = useState({...initialCardState});\n    const [ currentDeck, setCurrentDeck ] = useState({...initialDeckState});\n\n    useEffect(() => {\n        async function loadCurrentDeckFromAPI() {\n            try {\n                const response = await readDeck(deckId);\n                setCurrentDeck(response);\n                setCurrentCard(response.cards.find(card => card.id.toString() === cardId));\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        loadCurrentDeckFromAPI();\n    }, [cardId, deckId]);\n\n    const updateCardChangeHandler = ({ target }) => {\n        setCurrentCard({\n            ...currentCard,\n            [target.name]: target.value,\n        });\n    };\n\n    const updateCardCancelHandler = (event) => {\n        event.preventDefault();\n        history.push(`/decks/${deckId}`)\n    };\n\n    const updateCardSubmitHandler = (event) => {\n        event.preventDefault();\n        updateCard(currentCard)\n        .then(() => {\n            setCurrentCard({...initialCardState});\n            history.push(`/decks/${deckId}`);\n        });\n    };\n\n    const breadcrumbItems = [\n        {label: 'Home', to: '/'},\n        {label: currentDeck.name, to: `/decks/${deckId}`, isActive: false},\n        {label: `Edit Card ${currentCard.id}`, isActive: true}\n    ]\n\n    if (currentDeck && currentCard) {\n        return (\n            <div>\n                <BreadcrumbNav items={breadcrumbItems} />\n                <Form\n                    formTitle={`${currentDeck.name}: Edit Card ${currentCard.id}`}\n                    changeHandler={updateCardChangeHandler}\n                    cancelHandler={updateCardCancelHandler}\n                    submitHandler={updateCardSubmitHandler}\n                    htmlForOne={`createCardFront`}\n                    formLabelOne={`Front`}\n                    formPlaceholderOne={currentCard.front}\n                    formNameOne={`front`}\n                    formValueOne={currentCard.front}\n                    htmlForTwo={`createCardBack`}\n                    formLabelTwo={`Back`}\n                    formPlaceholderTwo={currentCard.back}\n                    formNameTwo={`back`}\n                    formValueTwo={currentCard.back}\n                />\n            </div>\n        );\n    };\n    return <p>Loading...</p>\n};\n\nexport default EditCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}