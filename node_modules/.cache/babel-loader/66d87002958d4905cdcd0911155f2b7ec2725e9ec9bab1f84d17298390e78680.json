{"ast":null,"code":"import _objectSpread from\"/Users/Z00C53N/thinkful/react-projects/Module-13/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/Z00C53N/thinkful/react-projects/Module-13/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{useHistory,useParams}from'react-router-dom';import CreateButton from'../buttons/CreateButton';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function FlipCard(_ref){var cards=_ref.cards;var initialCardState={id:0,front:\"\",back:\"\",deckId:0};var sortedCards=cards.sort(function(cardA,cardB){return cardA.id-cardB.id;});var _useParams=useParams(),deckId=_useParams.deckId;var history=useHistory();var _useState=useState(_objectSpread({},initialCardState)),_useState2=_slicedToArray(_useState,2),currentCard=_useState2[0],setCurrentCard=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),currentCardIndex=_useState4[0],setCurrentCardIndex=_useState4[1];var _useState5=useState(1),_useState6=_slicedToArray(_useState5,2),displayedCardIndex=_useState6[0],setDisplayedCardIndex=_useState6[1];var _useState7=useState(true),_useState8=_slicedToArray(_useState7,2),cardIsFlipped=_useState8[0],setCardIsFlipped=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),endOfCardDeck=_useState10[0],setEndOfCardDeck=_useState10[1];useEffect(function(){if(sortedCards.length>2){setCardIsFlipped(true);}setCurrentCard(sortedCards[currentCardIndex]);},[sortedCards,currentCardIndex]);var cardFlipHandler=function cardFlipHandler(){cardIsFlipped?setCardIsFlipped(false):setCardIsFlipped(true);};var nextCardHandler=function nextCardHandler(){setCardIsFlipped(false);incrementCurrentCardAndIndexes();if(cards.length<=displayedCardIndex){setEndOfCardDeck(true);resetCardsTofirstIndexPrompt();};};function incrementCurrentCardAndIndexes(){setCurrentCardIndex(function(currentIndex){return currentIndex+1;});setDisplayedCardIndex(function(currentDisplayedIndex){return currentDisplayedIndex+1;});setCurrentCard(sortedCards[currentCardIndex+1]);};function resetCardsTofirstIndexPrompt(){if(window.confirm(\"Restart cards?\")){resetCardIndexesToInitialState();resetEndOfDeckToInitialState();changeRouteOnConfirmation(true);}else{resetEndOfDeckToInitialState();changeRouteOnConfirmation(false);}};function resetCardIndexesToInitialState(){setCurrentCardIndex(0);setDisplayedCardIndex(1);setCurrentCard(sortedCards[currentCardIndex]);};function resetEndOfDeckToInitialState(){return setEndOfCardDeck(false);}function changeRouteOnConfirmation(confirm){if(confirm){history.push(\"/decks/\".concat(deckId,\"/study\"));}else{history.push(\"/\");}};if(cards.length>2&&currentCard){return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Card \",displayedCardIndex,\" of \",cards.length]}),cardIsFlipped?/*#__PURE__*/_jsx(\"p\",{children:currentCard.front}):/*#__PURE__*/_jsx(\"p\",{children:currentCard.back}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary p-2\",onClick:cardFlipHandler,children:\"Flip\"})}),!cardIsFlipped?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-secondary p-2\",onClick:nextCardHandler,children:\"Next\"})}):null]})]});};if(!endOfCardDeck&&cards.length<=2){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Not enough cards.\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"You need at least 3 cards to study a deck. There \",cards.length<2?\"is\":\"are\",\" \",cards.length,\" \",cards.length<2?\"card\":\"cards\",\" currently in this deck.\"]}),/*#__PURE__*/_jsx(CreateButton,{routePath:\"/decks/\".concat(deckId,\"/cards/new\"),buttonFunction:\"Card\"})]});};if(endOfCardDeck){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{children:\"Great work!\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You've reached the end of the deck.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You can restart the cards by clicking 'OK'.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Clicking 'Cancel' will return you to the homescreen and list of available decks.\"})]});}return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});};export default FlipCard;","map":{"version":3,"names":["React","useEffect","useState","useHistory","useParams","CreateButton","jsxs","_jsxs","jsx","_jsx","FlipCard","_ref","cards","initialCardState","id","front","back","deckId","sortedCards","sort","cardA","cardB","_useParams","history","_useState","_objectSpread","_useState2","_slicedToArray","currentCard","setCurrentCard","_useState3","_useState4","currentCardIndex","setCurrentCardIndex","_useState5","_useState6","displayedCardIndex","setDisplayedCardIndex","_useState7","_useState8","cardIsFlipped","setCardIsFlipped","_useState9","_useState10","endOfCardDeck","setEndOfCardDeck","length","cardFlipHandler","nextCardHandler","incrementCurrentCardAndIndexes","resetCardsTofirstIndexPrompt","currentIndex","currentDisplayedIndex","window","confirm","resetCardIndexesToInitialState","resetEndOfDeckToInitialState","changeRouteOnConfirmation","push","concat","className","children","onClick","routePath","buttonFunction"],"sources":["/Users/Z00C53N/thinkful/react-projects/Module-13/src/components/cards/FlipCard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport CreateButton from '../buttons/CreateButton';\n\nfunction FlipCard({ cards }) {\n    const initialCardState = {\n        id: 0,\n        front: \"\",\n        back: \"\",\n        deckId: 0,\n    };\n\n    const sortedCards = cards.sort((cardA, cardB) => cardA.id - cardB.id);\n\n    const { deckId } = useParams();\n    const history = useHistory();\n\n    const [ currentCard, setCurrentCard ] = useState({...initialCardState});\n    const [ currentCardIndex, setCurrentCardIndex ] = useState(0);\n    const [ displayedCardIndex, setDisplayedCardIndex ] = useState(1);\n    const [ cardIsFlipped, setCardIsFlipped ] = useState(true);\n    const [ endOfCardDeck, setEndOfCardDeck ] = useState(false);\n\n    useEffect(() => {\n        if (sortedCards.length > 2) {\n            setCardIsFlipped(true);\n        }\n        setCurrentCard(sortedCards[currentCardIndex]);\n    }, [sortedCards, currentCardIndex]);\n    \n    const cardFlipHandler = () => {\n        (cardIsFlipped ? setCardIsFlipped(false) : setCardIsFlipped(true));\n    };\n\n    const nextCardHandler = () => {\n        setCardIsFlipped(false);\n        incrementCurrentCardAndIndexes();\n        if(cards.length <= displayedCardIndex) {\n            setEndOfCardDeck(true);\n            resetCardsTofirstIndexPrompt();\n        };\n    };\n\n    function incrementCurrentCardAndIndexes() {\n        setCurrentCardIndex((currentIndex) => currentIndex+ 1);\n        setDisplayedCardIndex((currentDisplayedIndex) => currentDisplayedIndex+ 1);\n        setCurrentCard(sortedCards[currentCardIndex + 1]);\n    };\n\n    function resetCardsTofirstIndexPrompt() {\n        if (window.confirm(\"Restart cards?\")) {\n            resetCardIndexesToInitialState();\n            resetEndOfDeckToInitialState();\n            changeRouteOnConfirmation(true);\n        } else {\n            resetEndOfDeckToInitialState();\n            changeRouteOnConfirmation(false);\n        }\n    };\n\n    function resetCardIndexesToInitialState() {\n        setCurrentCardIndex(0);\n        setDisplayedCardIndex(1);\n        setCurrentCard(sortedCards[currentCardIndex]);\n    };\n\n    function resetEndOfDeckToInitialState() {\n        return setEndOfCardDeck(false);\n    }\n\n    function changeRouteOnConfirmation(confirm) {\n        if (confirm) {\n            history.push(`/decks/${deckId}/study`);\n        } else {\n            history.push(\"/\");\n        }\n    };\n\n    if (cards.length > 2 && currentCard) {\n        return (\n            <div className=\"container\">\n                <h4>Card {displayedCardIndex} of {cards.length}</h4>\n                {cardIsFlipped ? <p>{currentCard.front}</p> : <p>{currentCard.back}</p>}\n                <div className=\"row\">\n                    <div>\n                        <button className=\"btn btn-secondary p-2\" onClick={cardFlipHandler}>Flip</button>\n                    </div>\n                    {!cardIsFlipped ? (\n                        <div>\n                            <button className=\"btn btn-secondary p-2\" onClick={nextCardHandler}>Next</button>\n                        </div>\n                        ) : (\n                        null\n                        )}\n                </div>\n            </div>\n        );\n    };\n    if (!endOfCardDeck && cards.length <= 2) {\n        return (\n            <div>\n                <h4>Not enough cards.</h4>\n                <p>You need at least 3 cards to study a deck. There {cards.length < 2 ? \"is\" : \"are\"} {cards.length} {cards.length < 2 ? \"card\" : \"cards\"} currently in this deck.</p>\n                <CreateButton\n                    routePath={`/decks/${deckId}/cards/new`}\n                    buttonFunction={\"Card\"}\n                />\n            </div>\n        );\n    };\n    if (endOfCardDeck) {\n        return (\n            <div>\n                <h5>Great work!</h5>\n                <p>You've reached the end of the deck.</p>\n                <p>You can restart the cards by clicking 'OK'.</p>\n                <p>Clicking 'Cancel' will return you to the homescreen and list of available decks.</p>\n            </div>\n        );\n    }\n    return <p>Loading...</p>\n};\n\nexport default FlipCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}